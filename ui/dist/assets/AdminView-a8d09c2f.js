import{r as h,a as u,o as m,h as p,b as t,w as s,e as _,c as y,f as n,g as w,d as i,t as c,F as A,i as R}from"./index-c4cda20f.js";const T={class:"container"},z=n("br",null,null,-1),B=n("h2",{id:"h2"},"Welcome to the Admin page",-1),L=n("br",null,null,-1),O=n("br",null,null,-1),I=n("h2",null,"Create User",-1),J=n("h2",null,"Edit User",-1),M=n("br",null,null,-1),H=n("br",null,null,-1),W=n("br",null,null,-1),G={key:0},K=n("h2",null,"Selected User",-1),Q=n("thead",null,[n("tr",null,[n("th",{class:"text-center"}," Username: "),n("th",{class:"text-center"}," Email: ")])],-1),X=["onClick"],le={__name:"AdminView",setup(Y){const e=h({users:{},newUser:{username:"",name:"",email:"",password:""},selectedUser:null}),v=h(!1),U=h(!1);function E(r){return new Date(r).toLocaleString()}const f=async()=>{try{await fetch("http://localhost:5500/api/user",w()).then(r=>r.json()).then(r=>{e.value.users=r})}catch(r){console.log("cannot fetch users",r)}};f();function N(r){e.value.selectedUser=r,console.log("selected user:",r)}const P=async()=>{if(!e.value.newUser.username||!e.value.newUser.name||!e.value.newUser.email){alert("Please fill out all fields");return}if(e.value.newUser.password&&e.value.newUser.password.length<8){alert("Password must be at least 8 characters");return}if(!e.value.newUser.email.includes("@")){alert("Please enter a valid email address");return}if(!e.value.newUser.email.includes(".")){alert("Please enter a valid email address");return}if(e.value.newUser.email.includes("*","!",",","#","$","%","^","&","*","(",")","+","=","?","/","<",">","~","`","[","]","{","}","|",":",";","'",'"',"\\")){alert("Please enter a valid email address");return}if(e.value.newUser.username.length<4){alert("Username must be at least 4 characters");return}if(e.value.newUser.name.length<4){alert("Name must be at least 4 characters");return}if(e.value.users.find(l=>l.username===e.value.newUser.username)){alert("Username already exists");return}if(e.value.users.find(l=>l.email===e.value.newUser.email)){alert("Email already exists");return}const r={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e.value.newUser.username,name:e.value.newUser.name,email:e.value.newUser.email,password:e.value.newUser.password,role:e.value.newUser.role})};await fetch("http://localhost:5500/api/user/create",w(r)).then(l=>l.json()).then(l=>{console.log("new user created:",l),f(),g(),alert("User created successfully!")}).catch(l=>{console.log(l,"user not created")})};async function $(r){if(e.value.selectedUser.password&&e.value.selectedUser.password.length<8){alert("Password must be at least 8 characters");return}if(!e.value.selectedUser.email.includes("@")){alert("Please enter a valid email address");return}if(!e.value.selectedUser.email.includes(".")){alert("Please enter a valid email address");return}if(e.value.selectedUser.email.includes("*","!",",","#","$","%","^","&","*","(",")","+","=","?","/","<",">","~","`","[","]","{","}","|",":",";","'",'"',"\\")){alert("Please enter a valid email address");return}if(e.value.selectedUser.username.length<4){alert("Username must be at least 4 characters");return}if(e.value.selectedUser.name.length<4){alert("Name must be at least 4 characters");return}if(e.value.users.find(l=>l.username===e.value.newUser.username)){alert("Username already exists");return}if(e.value.users.find(l=>l.email===e.value.newUser.email)){alert("Email already exists");return}await fetch(`http://localhost:5500/api/user/${r}`,w({method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({user:r,...e.value.selectedUser})})).then(l=>l.json()).then(l=>{f(),g(),alert("User updated successfully!"),console.log("user updated:",l),console.log("user id:",r)}).catch(l=>{console.log(l,"user not updated")})}async function D(r){await fetch(`http://localhost:5500/api/user/${r}`,w({method:"DELETE"})).then(l=>l.json()).then(l=>{console.log("user deleted:",l),f(),e.value.selectedUser=null,alert("User deleted successfully!")}).catch(l=>{console.log(l,"user not deleted")})}function g(){e.value.newUser.username="",e.value.newUser.name="",e.value.newUser.email="",e.value.newUser.password=""}return(r,l)=>{const o=u("v-btn"),V=u("v-card-title"),d=u("v-text-field"),C=u("v-select"),k=u("v-actions"),x=u("v-form"),b=u("v-card"),q=u("v-card-actions"),S=u("v-card-text"),F=u("v-card-subtitle"),j=u("v-table");return m(),p("div",T,[z,B,L,t(o,{onClick:l[0]||(l[0]=a=>v.value=!0)},{default:s(()=>[i("Create a new user account")]),_:1}),O,t(b,{modelValue:v.value,"onUpdate:modelValue":l[8]||(l[8]=a=>v.value=a)},{default:s(()=>[v.value?(m(),y(x,{key:0,id:"Forms"},{default:s(()=>[t(V,{style:{"font-size":"medium"}},{default:s(()=>[I]),_:1}),t(d,{modelValue:e.value.newUser.username,"onUpdate:modelValue":l[1]||(l[1]=a=>e.value.newUser.username=a),label:"Username",required:""},null,8,["modelValue"]),t(d,{modelValue:e.value.newUser.name,"onUpdate:modelValue":l[2]||(l[2]=a=>e.value.newUser.name=a),label:"Name",required:""},null,8,["modelValue"]),t(d,{modelValue:e.value.newUser.email,"onUpdate:modelValue":l[3]||(l[3]=a=>e.value.newUser.email=a),label:"Email",required:""},null,8,["modelValue"]),t(d,{modelValue:e.value.newUser.password,"onUpdate:modelValue":l[4]||(l[4]=a=>e.value.newUser.password=a),label:"Password",required:""},null,8,["modelValue"]),t(C,{modelValue:e.value.newUser.role,"onUpdate:modelValue":l[5]||(l[5]=a=>e.value.newUser.role=a),items:["USER","ADMIN"],label:"Role"},null,8,["modelValue"]),t(k,null,{default:s(()=>[t(o,{onClick:l[6]||(l[6]=a=>P())},{default:s(()=>[i("Create a new user account")]),_:1}),t(o,{onClick:l[7]||(l[7]=a=>v.value=!1)},{default:s(()=>[i("Cancel")]),_:1})]),_:1})]),_:1})):_("",!0)]),_:1},8,["modelValue"]),t(b,{modelValue:U.value,"onUpdate:modelValue":l[16]||(l[16]=a=>U.value=a)},{default:s(()=>[U.value?(m(),y(x,{key:0,id:"Forms"},{default:s(()=>[t(V,{style:{"font-size":"medium"}},{default:s(()=>[J]),_:1}),t(d,{modelValue:e.value.selectedUser.username,"onUpdate:modelValue":l[9]||(l[9]=a=>e.value.selectedUser.username=a),label:"Username",required:""},null,8,["modelValue"]),t(d,{modelValue:e.value.selectedUser.name,"onUpdate:modelValue":l[10]||(l[10]=a=>e.value.selectedUser.name=a),label:"Name",required:""},null,8,["modelValue"]),t(d,{modelValue:e.value.selectedUser.email,"onUpdate:modelValue":l[11]||(l[11]=a=>e.value.selectedUser.email=a),label:"Email",required:""},null,8,["modelValue"]),t(d,{modelValue:e.value.selectedUser.password,"onUpdate:modelValue":l[12]||(l[12]=a=>e.value.selectedUser.password=a),label:"Password"},null,8,["modelValue"]),t(C,{modelValue:e.value.selectedUser.role,"onUpdate:modelValue":l[13]||(l[13]=a=>e.value.selectedUser.role=a),items:["USER","ADMIN"],label:"Role"},null,8,["modelValue"]),t(k,null,{default:s(()=>[t(o,{onClick:l[14]||(l[14]=a=>$(e.value.selectedUser._id))},{default:s(()=>[i("Update")]),_:1}),t(o,{onClick:l[15]||(l[15]=a=>U.value=!1)},{default:s(()=>[i("Cancel")]),_:1})]),_:1}),M,H]),_:1})):_("",!0)]),_:1},8,["modelValue"]),W,e.value.selectedUser?(m(),p("div",G,[t(b,null,{default:s(()=>[t(V,{style:{"font-size":"medium"}},{default:s(()=>[K,t(F,null,{default:s(()=>[t(S,{style:{"font-size":"larger"}},{default:s(()=>[n("p",null,"Username: "+c(e.value.selectedUser.username),1),n("p",null,"Name: "+c(e.value.selectedUser.name),1),n("p",null,"Email: "+c(e.value.selectedUser.email),1),n("p",null,"Role: "+c(e.value.selectedUser.role),1),n("p",null,"Created: "+c(E(e.value.selectedUser.date)),1),t(q,null,{default:s(()=>[t(o,{onClick:l[17]||(l[17]=a=>e.value.selectedUser=null)},{default:s(()=>[i("Close")]),_:1}),t(o,{color:"primary",onClick:l[18]||(l[18]=a=>U.value=!0),"data-id":"{{state.selectedUser._id}}"},{default:s(()=>[i("Edit")]),_:1}),t(o,{color:"error",onClick:l[19]||(l[19]=a=>D(e.value.selectedUser._id))},{default:s(()=>[i("Delete")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})])):_("",!0),!v.value||!U.value?(m(),y(j,{key:1,"fixed-header":"",height:"500px",id:"tbal"},{default:s(()=>[Q,n("tbody",null,[(m(!0),p(A,null,R(e.value.users,a=>(m(),p("tr",{key:a._id,onClick:Z=>N(a),id:"tuser"},[n("td",null,c(a.username),1),n("td",null,c(a.email),1)],8,X))),128))])]),_:1})):_("",!0)])}}};export{le as default};
